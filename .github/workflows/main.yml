name: VSIX

on:
  workflow_dispatch:
  push:
  release:
    types: [published]
  pull_request:

jobs:
  build:
    name: CI
    env:
      VSIX_MAJOR: 0.99.0
      DOTNET_VERSION: 6.0.402
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - run: git submodule update --init --recursive
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
        include-prerelease: true
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 16.x
    - name: Version (Release)
      if: github.event_name == 'release'
      run: |
        arrTag=(${GITHUB_REF//\// })
        VERSION="${arrTag[2]}"
        echo "::set-output name=pkgver::$VERSION"
        echo "pkgversion=$VERSION" >> $GITHUB_ENV
    - name: Version (CI)
      if: github.event_name != 'release'
      run: |
        VERSION=$VSIX_MAJOR-ci$GITHUB_RUN_ID
        echo "pkgversion=$VERSION" >> $GITHUB_ENV
        echo "VSIX VERSION: $VERSION"

    - name: NPM
      run: |
        npm install

    - name: Update version in package.json
      uses: jossef/action-set-json-field@v2
      with:
        file: package.json
        field: version
        value: ${{ env.pkgversion }}
    - name: Update version in package-lock.json
      uses: jossef/action-set-json-field@v2
      with:
        file: package-lock.json
        field: version
        value: ${{ env.pkgversion }}

    - name: Create VSIX
      run: pwsh ./build.ps1 all
    - name: Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: VSIX
        path: '*.vsix'

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v1
        with:
          name: VSIX
      - name: Version (Release)
        run: |
          arrTag=(${GITHUB_REF//\// })
          VERSION="${arrTag[2]}"
          echo "::set-output name=pkgverrelease::$VERSION"
          echo "VSIX VERSION: $VERSION"
      - name: Publish to Visual Studio Marketplace
        uses: HaaLeo/publish-vscode-extension@v0
        with:
          pat: ${{ secrets.VS_MARKETPLACE_TOKEN }}
          registryUrl: https://marketplace.visualstudio.com
          extensionFile: ./VSIX/vscode-comet.vsix
          packagePath: ""
